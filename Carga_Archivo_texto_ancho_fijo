import sqlalchemy, pyodbc, os
import pandas as pd
import numpy as np
import time
import pyarrow as pa
import pyarrow.csv as csv
import pyarrow.compute as compute
import polars as pl
import socket
from datetime import datetime, timedelta
Dia_ayer = datetime.strftime(datetime.now() - timedelta(1), "%d%m")
limites = [(0,5),
(5,20),
(20,29),
(29,48),
(48,50),
(50,65),
(65,73),
(73,79),
(79,105),
(105,135),
(135,155),
(155,175),
(175,183),
(183,184),
(184,224),
(224,254),
(254,274),
(274,294),
(294,312),
(312,352),
(352,382),
(382,402),
(402,422),
(422,440),
(440,500),
(500,600),
(600,640),
(640,670),
(670,690),
(690,715),
(715,733),
(733,758),
(758,788),
(788,808),
(808,828),
(828,868),
(868,883),
(883,908),
(908,938),
(938,958),
(958,978),
(978,980),
(980,991),
(991,1002),
(1002,1013),
(1013,1024),
(1024,1035),
(1035,1046),
(1046,1051),
(1051,1059),
(1059,1074),
(1074,1082),
(1082,1093),
(1093,1095),
(1095,1097),
(1097,1112),
(1112,1117),
(1117,1118),
(1118,1121),
(1121,1129),
(1129,1137),
(1137,1148),
(1148,1159),
(1159,1170),
(1170,1181),
(1181,1192),
(1192,1203),
(1203,1214),
(1214,1225),
(1225,1236),
(1236,1254)]
names = ['LOCAL',
'AGENCIA',
'CUENTA CERTEGY',
'NUMERO TARJETA',
'CODIGO PRODUCTO',
'FOLIO AFILIACION',
'FEC CREA CLIENTE',
'TIPO DE CUENTA',
'RUT CLIENTE',
'APELLIDO PATERNO',
'APELLIDO MATERNO',
'NOMBRES',
'FECHA NACIMIENTO',
'SEXO',
'DIREC PARTICULAR',
'CODIGO COMUNA',
'CIUDAD',
'REGION',
'FONO PARTICULAR',
'DIRE ALTERNATIVA',
'COMUN ALTERNATIVA',
'CIUDA ALTERNATIVA',
'REGIO ALTERNATIVA',
'FONO ALTERNATIVO',
'CODIGO ACTIVIDAD',
'NOMBRE EMPRESA',
'DIRECCION EMPRESA',
'COMUNA EMPRESA',
'CIUDAD EMPRESA',
'REGION EMPRESA',
'FONO LABORAL',
'RUT CONYUGE',
'APE PATER CONYUGE',
'APE MATER CONYUGE',
'NOMBRES CONYUGE',
'DIRECCION CONYUGE',
'FONO CONYUGE',
'RUT ADICIONAL',
'APE PAT ADICIONAL',
'APE MAT ADICIONAL',
'NOMBRES ADICIONAL',
'DIA PAGO VENCIMIENTO',
'CUPO ASIGNADO',
'CUPO UTILIZADO',
'CUPO DISPONIBLE',
'TOTAL FACTURADO',
'PAGO MINIMO',
'DEUDA EN MORA',
'DIAS DE MORA',
'FEC VENCIMIENTO',
'MONTO PAGO',
'FEC ULT FACTUR',
'DEUDA ACTUAL',
'ESTADO FINANCIERO',
'ESTADO NO FINANCIERO',
'EMPRESA COMERCIAL',
'CONTA RENE CARTE VIG',
'INDIC RENEGOCIACION',
'COD INST FINANCIERA',
'Fecha Apertura Mora',
'Fecha Vcmto Final',
'Mora Tramo 1',
'Mora Tramo 2',
'Mora Tramo 3',
'Mora Tramo 4',
'Mora Tramo 5',
'Mora Tramo 6',
'Mora Tramo 7',
'Mora Tramo 8',
'Mora Tramo 9',
'Numero Celular']
nombre_archivo ="C:/FPP1"+Dia_ayer+"1D."+"FPP1"+Dia_ayer+"1D"
engine = sqlalchemy.create_engine(f'mssql+pyodbc://{socket.gethostname()}/Sistema_Cobranza_fsp?trusted_connection=yes&driver=ODBC Driver 17 for SQL Server',fast_executemany=True)
df = pd.read_fwf(nombre_archivo, names = names ,colspecs = limites)
df.to_sql('Nombre_base_datos', con = engine, if_exists ='replace', index = False) --- se puede usar append depende de que se quiera relizar en este caso es una carga diaria
